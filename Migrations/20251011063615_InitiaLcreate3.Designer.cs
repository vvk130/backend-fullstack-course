// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace backend_fullstack_course.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251011063615_InitiaLcreate3")]
    partial class InitiaLcreate3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GameModel.Competition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CompetitionType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Competitions", "public");
                });

            modelBuilder.Entity("GameModel.Horse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Age")
                        .HasColumnType("double precision");

                    b.Property<int>("Breed")
                        .HasColumnType("integer");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<int>("Color")
                        .HasColumnType("integer");

                    b.Property<Guid?>("DamId")
                        .HasColumnType("uuid");

                    b.Property<int>("Energy")
                        .HasColumnType("integer");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<int>("Relationship")
                        .HasColumnType("integer");

                    b.Property<Guid?>("SireId")
                        .HasColumnType("uuid");

                    b.ComplexProperty<Dictionary<string, object>>("Qualities", "GameModel.Horse.Qualities#Qualities", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Agility")
                                .HasColumnType("integer");

                            b1.Property<int>("Endurance")
                                .HasColumnType("integer");

                            b1.Property<int>("Intelligence")
                                .HasColumnType("integer");

                            b1.Property<int>("JumpingAbility")
                                .HasColumnType("integer");

                            b1.Property<int>("Speed")
                                .HasColumnType("integer");

                            b1.Property<int>("Stamina")
                                .HasColumnType("integer");

                            b1.Property<int>("Strength")
                                .HasColumnType("integer");
                        });

                    b.HasKey("Id");

                    b.ToTable("Horses", "public");
                });

            modelBuilder.Entity("GameModel.HorseBreed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Breed")
                        .HasColumnType("integer");

                    b.Property<int>("MaxHeightCm")
                        .HasColumnType("integer");

                    b.Property<int>("MinHeightCm")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<int[]>("PossibleColors")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.ToTable("HorseBreeds", "public");
                });

            modelBuilder.Entity("GameModel.Level", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("EntryPoints")
                        .HasColumnType("integer");

                    b.Property<int>("LevelNumber")
                        .HasColumnType("integer");

                    b.ComplexProperty<Dictionary<string, object>>("Stable", "GameModel.Level.Stable#Stable", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Cleanleness")
                                .HasColumnType("integer");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("EnvironmentScore")
                                .HasColumnType("integer");

                            b1.Property<string>("ImgUrl")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("StableAmount")
                                .HasColumnType("integer");

                            b1.Property<int>("StableType")
                                .HasColumnType("integer");
                        });

                    b.HasKey("Id");

                    b.ToTable("Levels", "public");
                });

            modelBuilder.Entity("GameModel.Competition", b =>
                {
                    b.OwnsMany("GameModel.FearType", "ScaryObject", b1 =>
                        {
                            b1.Property<Guid>("CompetitionId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<bool>("Discovered")
                                .HasColumnType("boolean");

                            b1.Property<int>("FearItem")
                                .HasColumnType("integer");

                            b1.Property<int>("Severity")
                                .HasColumnType("integer");

                            b1.HasKey("CompetitionId", "Id");

                            b1.ToTable("Competitions_ScaryObject", "public");

                            b1.WithOwner()
                                .HasForeignKey("CompetitionId");
                        });

                    b.Navigation("ScaryObject");
                });

            modelBuilder.Entity("GameModel.Horse", b =>
                {
                    b.OwnsMany("GameModel.FearType", "Fears", b1 =>
                        {
                            b1.Property<Guid>("HorseId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<bool>("Discovered")
                                .HasColumnType("boolean");

                            b1.Property<int>("FearItem")
                                .HasColumnType("integer");

                            b1.Property<int>("Severity")
                                .HasColumnType("integer");

                            b1.HasKey("HorseId", "Id");

                            b1.ToTable("Horses_Fears", "public");

                            b1.WithOwner()
                                .HasForeignKey("HorseId");
                        });

                    b.OwnsMany("GameModel.PersonalityType", "Personalities", b1 =>
                        {
                            b1.Property<Guid>("HorseId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<bool>("Discovered")
                                .HasColumnType("boolean");

                            b1.Property<int>("PersonalityTrait")
                                .HasColumnType("integer");

                            b1.Property<int>("Severity")
                                .HasColumnType("integer");

                            b1.HasKey("HorseId", "Id");

                            b1.ToTable("PersonalityType", "public");

                            b1.WithOwner()
                                .HasForeignKey("HorseId");
                        });

                    b.Navigation("Fears");

                    b.Navigation("Personalities");
                });
#pragma warning restore 612, 618
        }
    }
}
